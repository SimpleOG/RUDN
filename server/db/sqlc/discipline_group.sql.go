// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: discipline_group.sql

package db

import (
	"context"
)

const create_discipline_group = `-- name: Create_discipline_group :one
INSERT INTO  "discipline_group"(
    discipline_name,
    group_name
    )

VALUES ($1, $2)
RETURNING discipline_name, group_name
`

type Create_discipline_groupParams struct {
	DisciplineName string `json:"discipline_name"`
	GroupName      string `json:"group_name"`
}

func (q *Queries) Create_discipline_group(ctx context.Context, arg Create_discipline_groupParams) (DisciplineGroup, error) {
	row := q.db.QueryRow(ctx, create_discipline_group, arg.DisciplineName, arg.GroupName)
	var i DisciplineGroup
	err := row.Scan(&i.DisciplineName, &i.GroupName)
	return i, err
}

const get_discipline_group = `-- name: Get_discipline_group :one
SELECT discipline_name, group_name
FROM discipline_group
WHERE
        discipline_name = $1
    and group_name=$2
`

type Get_discipline_groupParams struct {
	DisciplineName string `json:"discipline_name"`
	GroupName      string `json:"group_name"`
}

func (q *Queries) Get_discipline_group(ctx context.Context, arg Get_discipline_groupParams) (DisciplineGroup, error) {
	row := q.db.QueryRow(ctx, get_discipline_group, arg.DisciplineName, arg.GroupName)
	var i DisciplineGroup
	err := row.Scan(&i.DisciplineName, &i.GroupName)
	return i, err
}
