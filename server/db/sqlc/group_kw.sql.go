// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: group_kw.sql

package db

import (
	"context"
)

const create_group_kw = `-- name: Create_group_kw :one
INSERT INTO  "group_kw"(
    kw_id,
    group_name
)

VALUES ($1, $2)
RETURNING kw_id, group_name
`

type Create_group_kwParams struct {
	KwID      int32  `json:"kw_id"`
	GroupName string `json:"group_name"`
}

func (q *Queries) Create_group_kw(ctx context.Context, arg Create_group_kwParams) (GroupKw, error) {
	row := q.db.QueryRow(ctx, create_group_kw, arg.KwID, arg.GroupName)
	var i GroupKw
	err := row.Scan(&i.KwID, &i.GroupName)
	return i, err
}

const get_group_kw = `-- name: Get_group_kw :one
SELECT kw_id, group_name
FROM group_kw
WHERE kw_id = $1
  and group_name=$2
`

type Get_group_kwParams struct {
	KwID      int32  `json:"kw_id"`
	GroupName string `json:"group_name"`
}

func (q *Queries) Get_group_kw(ctx context.Context, arg Get_group_kwParams) (GroupKw, error) {
	row := q.db.QueryRow(ctx, get_group_kw, arg.KwID, arg.GroupName)
	var i GroupKw
	err := row.Scan(&i.KwID, &i.GroupName)
	return i, err
}
