// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: semester.sql

package db

import (
	"context"
)

const create_Semester = `-- name: Create_Semester :one

INSERT INTO "semester" (
     auditorium_work, pairs_per_week, extracurricular_activities,semester_type
   )
VALUES ($1, $2, $3,$4)
RETURNING id, semester_type, auditorium_work, pairs_per_week, extracurricular_activities
`

type Create_SemesterParams struct {
	AuditoriumWork            float64 `json:"auditorium_work"`
	PairsPerWeek              float64 `json:"pairs_per_week"`
	ExtracurricularActivities float64 `json:"extracurricular_activities"`
	SemesterType              string  `json:"semester_type"`
}

func (q *Queries) Create_Semester(ctx context.Context, arg Create_SemesterParams) (Semester, error) {
	row := q.db.QueryRow(ctx, create_Semester,
		arg.AuditoriumWork,
		arg.PairsPerWeek,
		arg.ExtracurricularActivities,
		arg.SemesterType,
	)
	var i Semester
	err := row.Scan(
		&i.ID,
		&i.SemesterType,
		&i.AuditoriumWork,
		&i.PairsPerWeek,
		&i.ExtracurricularActivities,
	)
	return i, err
}

const get_Semester = `-- name: Get_Semester :one

SELECT id, semester_type, auditorium_work, pairs_per_week, extracurricular_activities
FROM "semester"
WHERE "id" = $1
LIMIT 1
`

func (q *Queries) Get_Semester(ctx context.Context, id int32) (Semester, error) {
	row := q.db.QueryRow(ctx, get_Semester, id)
	var i Semester
	err := row.Scan(
		&i.ID,
		&i.SemesterType,
		&i.AuditoriumWork,
		&i.PairsPerWeek,
		&i.ExtracurricularActivities,
	)
	return i, err
}
