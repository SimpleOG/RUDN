// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: teacher_group.sql

package db

import (
	"context"
)

const create_teacher_group = `-- name: Create_teacher_group :one
INSERT INTO  "teacher_group"(
    teacher_name,
    group_name
)

VALUES ($1, $2)
RETURNING teacher_name, group_name
`

type Create_teacher_groupParams struct {
	TeacherName string `json:"teacher_name"`
	GroupName   string `json:"group_name"`
}

func (q *Queries) Create_teacher_group(ctx context.Context, arg Create_teacher_groupParams) (TeacherGroup, error) {
	row := q.db.QueryRow(ctx, create_teacher_group, arg.TeacherName, arg.GroupName)
	var i TeacherGroup
	err := row.Scan(&i.TeacherName, &i.GroupName)
	return i, err
}

const get_teacher_group = `-- name: Get_teacher_group :one
SELECT teacher_name, group_name
FROM teacher_group
WHERE teacher_name = $1
  and group_name=$2
`

type Get_teacher_groupParams struct {
	TeacherName string `json:"teacher_name"`
	GroupName   string `json:"group_name"`
}

func (q *Queries) Get_teacher_group(ctx context.Context, arg Get_teacher_groupParams) (TeacherGroup, error) {
	row := q.db.QueryRow(ctx, get_teacher_group, arg.TeacherName, arg.GroupName)
	var i TeacherGroup
	err := row.Scan(&i.TeacherName, &i.GroupName)
	return i, err
}
